function graphic = lucas()
% Simple airplane 3D Model
% Based on vertices and patches
% Author: Alexandros Nikou
% Date: 2018/05/11

%Geometrical Quantities Definition

% real thruster positions
r1 = [0.5096 -0.1783 -0.5205];
r1 = r1-0.15*r1;
r2 = [0.0994 -0.2592 -0.1686];
r2 = r2-0.15*r2;
r3 = [0.10996 -0.7631 -0.2357];
r3 = r3-0.15*r3;
r4 = [-0.3954 0.2909 0.0079];
r4 = r4-0.15*r4;
r5 = [0.2170 0.4234 -0.2984];
r5 = r5-0.15*r5;
r6 = [-0.2560 -0.5152 -0.0449];
r6 = r6-0.15*r6;
r7 = [0.6021 0.6369 -0.0724];
r7 = r7-0.20*r7;

a = 0.1;
c = 0.1;

% Define the vertices (physical location of vertices)
V = [[r1(1) r1(2) r1(3)+a]; 0 0 0; [r1(1) r1(2) r1(3)-a];
    [r1(1) r1(2) r1(3)+a]; 0 0 0; [r1(1) r1(2)+a r1(3)+a];
    [r1(1) r1(2)+a r1(3)+a]; 0 0 0; [r1(1) r1(2)+a r1(3)-a];
    [r1(1) r1(2)+a r1(3)-a]; 0 0 0; [r1(1) r1(2) r1(3)-a];
    
    [r2(1) r2(2) r2(3)+a]; 0 0 0; [r2(1) r2(2) r2(3)-a];
    [r2(1) r2(2) r2(3)+a]; 0 0 0; [r2(1) r2(2)+a r2(3)+a];
    [r2(1) r2(2)+a r2(3)+a]; 0 0 0; [r2(1) r2(2)+a r2(3)-a];
    [r2(1) r2(2)+a r2(3)-a]; 0 0 0; [r2(1) r2(2) r2(3)-a];
    
    [r3(1) r3(2) r3(3)+a]; 0 0 0; [r3(1) r3(2) r3(3)-a];
    [r3(1) r3(2) r3(3)+a]; 0 0 0; [r3(1) r3(2)+a r3(3)+a];
    [r3(1) r3(2)+a r3(3)+a]; 0 0 0; [r3(1) r3(2)+a r3(3)-a];
    [r3(1) r3(2)+a r3(3)-a]; 0 0 0; [r3(1) r3(2) r3(3)-a];
    
    [r4(1) r4(2) r4(3)+a]; 0 0 0; [r4(1) r4(2) r4(3)-a];
    [r4(1) r4(2) r4(3)+a]; 0 0 0; [r4(1) r4(2)+a r4(3)+a];
    [r4(1) r4(2)+a r4(3)+a]; 0 0 0; [r4(1) r4(2)+a r4(3)-a];
    [r4(1) r4(2)+a r4(3)-a]; 0 0 0; [r4(1) r4(2) r4(3)-a];
    
    [r5(1) r5(2) r5(3)+a]; 0 0 0; [r5(1) r5(2) r5(3)-a];
    [r5(1) r5(2) r5(3)+a]; 0 0 0; [r5(1) r5(2)+a r5(3)+a];
    [r5(1) r5(2)+a r5(3)+a]; 0 0 0; [r5(1) r5(2)+a r5(3)-a];
    [r5(1) r5(2)+a r5(3)-a]; 0 0 0; [r5(1) r5(2) r5(3)-a];
    
    [r6(1) r6(2) r6(3)+a]; 0 0 0; [r6(1) r6(2) r6(3)-a];
    [r6(1) r6(2) r6(3)+a]; 0 0 0; [r6(1) r6(2)+a r6(3)+a];
    [r6(1) r6(2)+a r6(3)+a]; 0 0 0; [r6(1) r6(2)+a r6(3)-a];
    [r6(1) r6(2)+a r6(3)-a]; 0 0 0; [r6(1) r6(2) r6(3)-a];
    
    [r7(1) r7(2) r7(3)+a]; 0 0 0; [r7(1) r7(2) r7(3)-a];
    [r7(1) r7(2) r7(3)+a]; 0 0 0; [r7(1) r7(2)+a r7(3)+a];
    [r7(1) r7(2)+0.1 r7(3)+a]; 0 0 0; [r7(1) r7(2)+a r7(3)-a];
    [r7(1) r7(2)+0.1 r7(3)-a]; 0 0 0; [r7(1) r7(2) r7(3)-a];
    
    -c -c 0;   %c1
     c -c 0;    %c2
     c  c 0;     %c3
    -c  c 0;    %c4
    -c -c c; %c5
     c -c c;  %c6
     c  c c;   %c7
    -c  c c  %c8
    
    ];

% define faces as a list of vertices numbered above
F = [1 2 3 3 3; % thr 1
    4 5 6 6 6;
    7 8 9 9 9 ;
    10 11 12 12 12;
    1 6 9 3 1;
    
    13 14 15 15 15; % thr 2
    16 17 18 18 18;
    19 20 21 21 21;
    22 23 24 24 24;
    13 18 21 15 13;
    
    25 26 27 27 27; % thr 3
    28 29 30 30 30;
    31 32 33 33 33;
    34 35 36 36 36;
    25 30 33 27 25;
    
    37 38 39 39 39; % thr 4
    40 41 42 42 42;
    43 44 45 45 45;
    46 47 48 48 48;
    37 42 45 39 37;
    
    49 50 51 51 51; % thr 5
    52 53 54 54 54;
    55 56 57 57 57;
    58 59 60 60 60;
    49 54 57 51 49;
    
    61 62 63 63 63; % thr 6
    64 65 66 66 66;
    67 68 69 69 69;
    70 71 72 72 72;
    61 66 69 63 61;
    
    73 74 75 75 75;
    76 77 78 78 78;
    79 80 81 81 81;
    82 83 84 84 84;
    73 78 81 75 73;
    
    85 86 90 89 89; % cube at center [0 0 0]
    85 88 92 89 89;
    87 88 92 91 91;
    86 87 91 90 90;
    89 90 91 92 92;
    85 86 87 88 88
    
    ];

% define colors for each face
patch_colors = [
    
1 0.7 0; %thr 1
1 0.7 0;
1 0.7 0;
1 0.7 0;
1 0.7 0;

1 0 1; % thr2
1 0 1;
1 0 1;
1 0 1;
1 0 1;

0 1 1; % thr3
0 1 1;
0 1 1;
0 1 1;
0 1 1;

0 0.4 0; % thr4
0 0.4 0;
0 0.4 0;
0 0.4 0;
0 0.4 0;

0.6 0.4 0.2; % thr 5
0.6 0.4 0.2;
0.6 0.4 0.2;
0.6 0.4 0.2;
0.6 0.4 0.2;

1 0.3 0; % thr 6
1 0.3 0;
1 0.3 0;
1 0.3 0;
1 0.3 0;

0 0.5 1; % thr 7
0 0.5 1;
0 0.5 1;
0 0.5 1;
0 0.5 1;

1 1 0.1; % cube at center [0 0 0]
1 1 0.1;
1 1 0.1;
1 1 0.1;
1 1 0.1;
1 1 0.1

];

graphic.V = V;
graphic.F = F;
graphic.patch_colors = patch_colors;

end